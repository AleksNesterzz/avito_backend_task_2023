// Code generated by mockery v2.28.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// LogGetter is an autogenerated mock type for the LogGetter type
type LogGetter struct {
	mock.Mock
}

// GetLogs provides a mock function with given fields: id, year_month
func (_m *LogGetter) GetLogs(id int, year_month string) ([][]string, error) {
	ret := _m.Called(id, year_month)

	var r0 [][]string
	var r1 error
	if rf, ok := ret.Get(0).(func(int, string) ([][]string, error)); ok {
		return rf(id, year_month)
	}
	if rf, ok := ret.Get(0).(func(int, string) [][]string); ok {
		r0 = rf(id, year_month)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([][]string)
		}
	}

	if rf, ok := ret.Get(1).(func(int, string) error); ok {
		r1 = rf(id, year_month)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewLogGetter interface {
	mock.TestingT
	Cleanup(func())
}

// NewLogGetter creates a new instance of LogGetter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewLogGetter(t mockConstructorTestingTNewLogGetter) *LogGetter {
	mock := &LogGetter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
